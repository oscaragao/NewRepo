<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEntra.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BAQAOw==
</value>
  </data>
</root>